# RatesUpdated tracks this event from the ExchangeRates.sol contract
type Transaction @entity{
    id:ID!
    transactionHash:Bytes!
    account:Bytes! #Address
    fromCurrencyKey:String
    fromAmount:BigInt!
    toCurrencyKey:String
    toAmount:BigInt!
    fee:BigInt!
    timstamp:BigInt!
    block:BigInt!
    trackingCode:String!
    symbol:String!
}

type Account @entity{
    id:ID!
    account: Bytes! #Address
    reges:RegisterMember!
}

type RegisterMember @entity{
    id:ID!
    count:BigInt!
    accountList: [Account!]!
    timstamp:BigInt!
}

type Portfolio @entity{
    id:ID!
    account:Bytes!
    timstamp:BigInt!
    amount:BigDecimal!
    zasset:[ZAssetBalance!]!
}

type ZAssetBalance @entity{
    id:ID!
    account:Bytes!
    currencyKey: String!
    balance: BigInt!
    usdConvertBalance: BigDecimal!
    rate:BigInt!
    portfolios: Portfolio!
}

type OneHourPortFolio @entity{
    id:ID!
    account:Bytes!
    timstamp:BigInt!
    amount:BigDecimal!
    startAmount:BigDecimal!
}

type OneDayPortFolio @entity{
    id:ID!
    account:Bytes!
    timstamp:BigInt!
    amount:BigDecimal!
    startAmount:BigDecimal!
}

type WeekPortFolio @entity{
    id:ID!
    account:Bytes!
    timstamp:BigInt!
    amount:BigDecimal!
    startAmount:BigDecimal!
}

type MonthPortFolio @entity{
    id:ID!
    account:Bytes!
    timstamp:BigInt!
    amount:BigDecimal!
    startAmount:BigDecimal!
}

type YearPortFolio @entity{
    id:ID!
    account:Bytes!
    timstamp:BigInt!
    amount:BigDecimal!
    startAmount:BigDecimal!
}