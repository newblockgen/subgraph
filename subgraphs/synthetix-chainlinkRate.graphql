# RatesUpdated tracks this event from the ExchangeRates.sol contract
type RatesUpdated @entity {
    id: ID!
    from: Bytes! # address
    currencyKeys: [Bytes!]! # bytes4[]
    newRates: [BigInt!]! # uint256[]
    gasPrice: BigInt!
    block: BigInt!
    timestamp: BigInt!
}

# An individual RateUpdate - split out of RatesUpdated event
type RateUpdate @entity {
    id: ID!
    currencyKey: Bytes!
    synth: String!
    rate: BigInt!
    block: BigInt!
    timestamp: BigInt!
}

# A chainlink Answer
type AggregatorAnswer @entity {
    id: ID!
    currencyKey: Bytes!
    synth: String!
    aggregator: Bytes!
    rate: BigInt!
    roundId: BigInt!
    block: BigInt!
    timestamp: BigInt!
}

# The average price of HZN over a 15 minute period
type FifteenMinuteHZNPrice @entity {
    id: ID!
    count: BigInt!
    averagePrice: BigInt!
}

# The average price of HZN over a day
type DailyHZNPrice @entity {
    id: ID!
    count: BigInt!
    averagePrice: BigInt!
}

type LatestRate @entity {
    " Name of synth. E.g. sUSD "
    id: ID!

    " Synth USD rate with 18 decimals "
    rate: BigInt!
}

type DailyCandle @entity {
    " DailyEpoch-Asset. E.g. 18361-sETH "
    id: ID!
    synth: String!
    open: BigInt!
    high: BigInt!
    low: BigInt!
    close: BigInt!
    timestamp: BigInt!
}
